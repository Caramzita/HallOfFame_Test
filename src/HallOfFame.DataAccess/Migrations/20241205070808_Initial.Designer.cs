// <auto-generated />
using HallOfFame.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HallOfFame.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241205070808_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HallOfFame.Core.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("HallOfFame.Core.PersonSkill", b =>
                {
                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("SkillName")
                        .HasColumnType("character varying(50)");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint");

                    b.HasKey("PersonId", "SkillName");

                    b.HasIndex("SkillName");

                    b.ToTable("PersonSkills");
                });

            modelBuilder.Entity("HallOfFame.Core.Skill", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Name");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Name = "C#"
                        },
                        new
                        {
                            Name = "Java"
                        },
                        new
                        {
                            Name = "Python"
                        },
                        new
                        {
                            Name = "SQL"
                        },
                        new
                        {
                            Name = "JavaScript"
                        });
                });

            modelBuilder.Entity("HallOfFame.Core.PersonSkill", b =>
                {
                    b.HasOne("HallOfFame.Core.Person", null)
                        .WithMany("Skills")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HallOfFame.Core.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HallOfFame.Core.Person", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
